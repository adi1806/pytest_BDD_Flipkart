{"name": "test_order_items_and_verify_cart", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x00AC8923+23283]\n\t(No symbol) [0x00A8E934]\n\t(No symbol) [0x009C0733]\n\t(No symbol) [0x00A0326F]\n\t(No symbol) [0x00A034AB]\n\t(No symbol) [0x00A3EE42]\n\t(No symbol) [0x00A24464]\n\t(No symbol) [0x00A3CB8D]\n\t(No symbol) [0x00A241B6]\n\t(No symbol) [0x009F8017]\n\t(No symbol) [0x009F890D]\n\tGetHandleVerifier [0x00BBA5F3+1013699]\n\tGetHandleVerifier [0x00BC3E4C+1052700]\n\tGetHandleVerifier [0x00BBD4B4+1025668]\n\tGetHandleVerifier [0x00AEEA2B+179195]\n\t(No symbol) [0x00A96833]\n\t(No symbol) [0x00A93198]\n\t(No symbol) [0x00A93337]\n\t(No symbol) [0x00A8B4BE]\n\tBaseThreadInitThunk [0x75757BA9+25]\n\tRtlInitializeExceptionChain [0x7737C11B+107]\n\tRtlClearBits [0x7737C09F+191]", "trace": "fixturefunc = <function return_home at 0x00000254FCE8D3F0>\nrequest = <FixtureRequest for <Function test_order_items_and_verify_cart>>\nkwargs = {'browser': <selenium.webdriver.chrome.webdriver.WebDriver (session=\"4cd69deeafed6bcf49d1e95f729de7e7\")>}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n.venv\\lib\\site-packages\\_pytest\\fixtures.py:898: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nfeatures\\tests\\test_item_ordering.py:51: in return_home\n    item_page.navigate_to_home_page()\nfeatures\\pages\\item_page.py:26: in navigate_to_home_page\n    self.wait_for_element((self.close_btn))\nfeatures\\pages\\base_page.py:13: in wait_for_element\n    WebDriverWait(self.driver, 10).until(EC.presence_of_element_located(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"4cd69deeafed6bcf49d1e95f729de7e7\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x00000254FBFB1EA0>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x00AC8923+23283]\nE       \t(No symbol) [0x00A8E934]\nE       \t(No symbol) [0x009C0733]\nE       \t(No symbol) [0x00A0326F]\nE       \t(No symbol) [0x00A034AB]\nE       \t(No symbol) [0x00A3EE42]\nE       \t(No symbol) [0x00A24464]\nE       \t(No symbol) [0x00A3CB8D]\nE       \t(No symbol) [0x00A241B6]\nE       \t(No symbol) [0x009F8017]\nE       \t(No symbol) [0x009F890D]\nE       \tGetHandleVerifier [0x00BBA5F3+1013699]\nE       \tGetHandleVerifier [0x00BC3E4C+1052700]\nE       \tGetHandleVerifier [0x00BBD4B4+1025668]\nE       \tGetHandleVerifier [0x00AEEA2B+179195]\nE       \t(No symbol) [0x00A96833]\nE       \t(No symbol) [0x00A93198]\nE       \t(No symbol) [0x00A93337]\nE       \t(No symbol) [0x00A8B4BE]\nE       \tBaseThreadInitThunk [0x75757BA9+25]\nE       \tRtlInitializeExceptionChain [0x7737C11B+107]\nE       \tRtlClearBits [0x7737C09F+191]\n\n.venv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:105: TimeoutException"}, "description": "C:\\Users\\ac57486\\OneDrive - Lumen\\Pictures\\MyFolder\\BDD\\flipkart_automation\\features\\item_ordering.feature: Order items and verify cart", "start": 1727186554033, "stop": 1727186625852, "uuid": "7863981e-533a-4d5b-b3b3-efc7545fcb8c", "historyId": "39b8b8a2b3246a44eb6d98554318efa3", "testCaseId": "39b8b8a2b3246a44eb6d98554318efa3", "fullName": "features.tests.test_item_ordering#test_order_items_and_verify_cart", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures"}, {"name": "parentSuite", "value": "features.tests"}, {"name": "suite", "value": "test_item_ordering"}, {"name": "host", "value": "IND-5CG0259CKD"}, {"name": "thread", "value": "39956-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "features.tests.test_item_ordering"}]}