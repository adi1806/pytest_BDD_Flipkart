{"name": "Order items and verify cart", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "fixturefunc = <function verify_items_in_cart at 0x00000271893C0F70>\nrequest = <FixtureRequest for <Function test_order_items_and_verify_cart>>\nkwargs = {'browser': <selenium.webdriver.chrome.webdriver.WebDriver (session=\"f4e4448eb7063696ca7b69946d8aec1c\")>, 'shared_data': {}}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n..\\..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\_pytest\\fixtures.py:898: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nfeatures\\tests\\test_item_ordering.py:83: in verify_items_in_cart\n    cart_page.verify_items_in_cart(2)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <features.pages.cart_page.CartPage object at 0x00000271893F17B0>, expected_items = 2\n\n    def verify_items_in_cart(self, expected_items):\n        self.wait_for_element((By.XPATH, \"//div[@class='cPHDOP col-12-12']/div[@class='eGXlor pk3Guc']\"))\n        items = self.driver.find_elements(*self.cart_items)\n        print('Items are----'+str(len(items)))\n        print('expected_items Items are----'+str(expected_items))\n>       assert len(items) == int(expected_items)\nE       AssertionError\n\nfeatures\\pages\\cart_page.py:22: AssertionError"}, "steps": [{"name": "Given I open Flipkart", "status": "passed", "start": 1727030424237, "stop": 1727030439443}, {"name": "When I search for \"Samsung S24 128 GB\" and select the second item", "status": "passed", "start": 1727030439443, "stop": 1727030445002}, {"name": "And I check the item's availability and add it to the cart", "status": "passed", "start": 1727030445002, "stop": 1727030457424}, {"name": "And I return to the home page", "status": "passed", "start": 1727030457424, "stop": 1727030461493}, {"name": "And I search for \"bajaj iron majesty\" and select the second item", "status": "passed", "start": 1727030461494, "stop": 1727030467060}, {"name": "And I check the item's availability and add it to the cart", "status": "passed", "start": 1727030467061, "stop": 1727030476251}, {"name": "Then I navigate to the cart", "status": "passed", "start": 1727030476251, "stop": 1727030476906}, {"name": "And I verify both items are present in the cart", "status": "failed", "statusDetails": {"trace": "AssertionError\n"}, "start": 1727030476906, "stop": 1727030477538}], "attachments": [{"name": "stdout", "source": "4f28b77a-bda9-46ff-a60f-3a53c28b0a62-attachment.txt", "type": "text/plain"}], "start": 1727030424236, "stop": 1727030477538, "uuid": "201ac3ef-bea1-44b4-47d1-6e1d7a90cbeb", "historyId": "201ac3efbea144b447d16e1d7a90cbeb", "fullName": "features\\item_ordering.feature:Order items and verify cart", "labels": [{"name": "host", "value": "IND-5CG0259CKD"}, {"name": "thread", "value": "16744-MainThread"}, {"name": "framework", "value": "pytest-bdd"}, {"name": "language", "value": "cpython3"}, {"name": "feature", "value": "Item ordering on Flipkart"}]}